<link rel="stylesheet" href="/css/user/otp.css">
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="auth-page-wrapper">
  <div class="auth-container">
    <h2>Verify Your OTP</h2>
    <form id="otpForm" novalidate>
      <div class="form-group otp-group">
        <p>Enter the OTP sent to your email...</p>
        <div class="otp-inputs">
          <input type="text" id="otp1" maxlength="1" required>
          <input type="text" id="otp2" maxlength="1" required>
          <input type="text" id="otp3" maxlength="1" required>
          <input type="text" id="otp4" maxlength="1" required>
        </div>
      </div>

      <div class="form-links otp-links">
        <button type="button" onclick="resendOTP()" class="btn_resend" id="btn_resend">Resend OTP</button>
        <span id="otp-timer">01:00</span>
      </div>

      <button type="submit" class="btn-auth">Submit</button>
    </form>
  </div>
</div>

<script>
  let timeLeft = 60; 
  let interval;  
  const timerElement = document.getElementById("otp-timer");

  function startTimer() {
    interval = setInterval(() => {
      const minutes = Math.floor(timeLeft / 60);
      const seconds = timeLeft % 60;

      timerElement.innerText = `${minutes}:${seconds < 10 ? "0" : ""}${seconds}`;
      timeLeft--;

      if (timeLeft < 0) {
        clearInterval(interval);
        timerElement.innerText = "Expired";
        document.getElementById("btn_resend").style.display="block"
        
      }
    }, 1000);
  }
  startTimer();
  const inputs = document.querySelectorAll(".otp-inputs input");
  inputs.forEach((input, index) => {
    input.addEventListener("input", () => {
      if (input.value && index < inputs.length - 1) {
        inputs[index + 1].focus();
      }
    })
  })

  document.getElementById("otpForm").addEventListener("submit", async (e) => {
    e.preventDefault();

    let otp = "";
    inputs.forEach(input => otp += input.value);

    if (otp.length < 4) {
      Swal.fire({
        icon: "error",
        title: "Invalid OTP",
        text: "Please enter all digits"
      });
      return;
    }

    try {
      const response = await fetch("/forgotOtp", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ otp })
      })

      const data = await response.json();

      if (data.success) {
        Swal.fire({
          icon: "success",
          title: "OTP Verified Successfully",
          showConfirmButton: false,
          timer: 1500
        }).then(() => {
          if (data.redirectUrl) {
            window.location.href = data.redirectUrl;
          }
        });
      } else {
        Swal.fire({
          icon: "error",
          title: "Error",
          text: "Invalid OTP"
        });
      }
    } catch (err) {
      Swal.fire({
        icon: "error",
        title: "Server Error",
        text: "Something went wrong, please try again"
      });
    }
  });

  async function resendOTP() {
    clearInterval(interval);
    timeLeft = 60;
    timerElement.innerText = "01:00";
    startTimer();
    document.getElementById("btn_resend").style.display="none"

    try {
      const response = await fetch("/resendOTP", {
        method: "POST",
        headers: { "Content-Type": "application/json" }
      });

      const data = await response.json();

      if (data.success) {
        Swal.fire({
          icon: "success",
          title: "OTP Resent Successfully",
          showConfirmButton: false,
          timer: 1500
        });
        inputs.forEach(input => input.value = ""); 
        inputs[0].focus();
      }
    } catch (err) {
      Swal.fire({
        icon: "error",
        title: "Server Error",
        text: "Could not resend OTP, please try again"
      });
    }
  }
</script>
